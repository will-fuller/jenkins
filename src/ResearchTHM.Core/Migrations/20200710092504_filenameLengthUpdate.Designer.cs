// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchTHM.Core.Models;

namespace ResearchTHM.Core.Migrations
{
    [DbContext(typeof(ResearchMktContext))]
    [Migration("20200710092504_filenameLengthUpdate")]
    partial class filenameLengthUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResearchTHM.Core.Models.BoxFolderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxFolderId")
                        .IsRequired()
                        .HasColumnName("box_folder_id")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnName("folder_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasColumnName("parent_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnName("parent_id")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BoxFolderId");

                    b.HasIndex("FolderName");

                    b.HasIndex("Parent");

                    b.ToTable("BoxFolderInfo");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktApiConfig", b =>
                {
                    b.Property<Guid>("AppConfigId")
                        .HasColumnName("app_config_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiName")
                        .HasColumnName("api_name")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("AppId")
                        .HasColumnName("app_id")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("EndPoint")
                        .HasColumnName("end_point")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("AppConfigId");

                    b.ToTable("mkt_api_config");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktAuditLog", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("audit_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedIds")
                        .HasColumnName("deleted_ids")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("ExcludedIds")
                        .HasColumnName("excluded_ids")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncludedIds")
                        .HasColumnName("included_ids")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<Guid?>("ProcessId")
                        .HasColumnName("process_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProcessName")
                        .HasColumnName("process_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<Guid?>("RunId")
                        .HasColumnName("run_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnName("updated_on")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("AuditId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_audit_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktBoxdocInfo", b =>
                {
                    b.Property<long>("DocId")
                        .HasColumnName("doc_id")
                        .HasColumnType("bigint");

                    b.Property<long>("Boxid")
                        .HasColumnName("box_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ContentCreatedOn")
                        .HasColumnName("content_created_on")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContentModifiedOn")
                        .HasColumnName("content_modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CreatedByName")
                        .HasColumnName("created_by_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CreatedByType")
                        .HasColumnName("created_by_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DocType")
                        .HasColumnName("doc_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Etag")
                        .HasColumnName("etag")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("FileName")
                        .HasColumnName("file_name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<int?>("FileSize")
                        .HasColumnName("file_size")
                        .HasColumnType("int");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ItemStatus")
                        .HasColumnName("item_status")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedByName")
                        .HasColumnName("modified_by_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedByType")
                        .HasColumnName("modified_by_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("OwnedById")
                        .HasColumnName("owned_by_id")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OwnedByName")
                        .HasColumnName("owned_by_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("OwnedByType")
                        .HasColumnName("owned_by_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ParentEtag")
                        .HasColumnName("parent_etag")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("ParentId")
                        .HasColumnName("parent_id")
                        .HasColumnType("bigint");

                    b.Property<string>("ParentName")
                        .HasColumnName("parent_name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(true);

                    b.Property<string>("ParentSequenceId")
                        .HasColumnName("parent_sequence_id")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ParentType")
                        .HasColumnName("parent_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("SequenceId")
                        .HasColumnName("sequence_id")
                        .HasColumnType("int");

                    b.HasKey("DocId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_box_doc_info");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktContributor", b =>
                {
                    b.Property<Guid>("ContributorId")
                        .HasColumnName("contributor_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("AuthorId")
                        .HasColumnName("author_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("CategoryId")
                        .HasColumnName("category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyCategory")
                        .HasColumnName("company_category")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ContributorAlias")
                        .HasColumnName("contributor_alias")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ContributorName")
                        .HasColumnName("contributor_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ContributorUid")
                        .HasColumnName("contributor_uid")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnName("currency_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Embargo")
                        .HasColumnName("embargo")
                        .HasColumnType("bit");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .HasColumnName("industry")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("IndustryId")
                        .HasColumnName("industry_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsExcluded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_excluded")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnName("profile_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfileName")
                        .HasColumnName("profile_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Region")
                        .HasColumnName("region")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Setcode")
                        .HasColumnName("setcode")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Setcodetype")
                        .HasColumnName("setcodetype")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Subject")
                        .HasColumnName("subject")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("SubjectId")
                        .HasColumnName("subject_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContributorId")
                        .HasName("pk_contributor_id");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_contributor");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktCountry", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .HasColumnName("country_Name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CountryUid")
                        .HasColumnName("country_UID")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("GeographicCodes")
                        .HasColumnName("Geographic_codes")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("GlobalCode")
                        .HasColumnName("Global_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasColumnName("Local_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("SetCode")
                        .HasColumnName("Set_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("CountryId")
                        .HasName("pk_coutry_id");

                    b.ToTable("mkt_country");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktDownloadHist", b =>
                {
                    b.Property<Guid>("DownloadHistId")
                        .HasColumnName("download_hist_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Analyst")
                        .HasColumnName("analyst")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<long?>("BoxFileId")
                        .HasColumnName("boxfile_id")
                        .HasColumnType("bigint");

                    b.Property<string>("ContributorName")
                        .HasColumnName("contributor_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<long>("DocId")
                        .HasColumnName("doc_id")
                        .HasColumnType("bigint");

                    b.Property<string>("DocName")
                        .HasColumnName("doc_name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<DateTime?>("DocReleaseDate")
                        .HasColumnName("doc_release_date")
                        .HasColumnType("datetime");

                    b.Property<string>("DocTitle")
                        .HasColumnName("doc_title")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(true);

                    b.Property<string>("DownloadType")
                        .HasColumnName("download_type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FileName")
                        .HasColumnName("file_name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<long?>("FileSize")
                        .HasColumnName("file_size")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasColumnName("file_type")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PageNo")
                        .HasColumnName("page_no")
                        .HasColumnType("int");

                    b.Property<string>("Pages")
                        .HasColumnName("pages")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Price")
                        .HasColumnName("price")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ProjectCode")
                        .HasColumnName("project_code")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Saved")
                        .HasColumnName("saved")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Source")
                        .HasColumnName("source")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DownloadHistId");

                    b.ToTable("mkt_download_hist");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroup", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupAdName")
                        .HasColumnName("group_adname")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("GroupDescription")
                        .HasColumnName("group_description")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("GroupName")
                        .HasColumnName("group_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<int?>("Priority")
                        .HasColumnName("priority")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("isdeveloper")
                        .HasColumnType("bit");

                    b.HasKey("GroupId")
                        .HasName("pk_group_id");

                    b.ToTable("mkt_group");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContributorId")
                        .HasColumnName("contributor_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("mkt_group_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnName("permission_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("mkt_group_permission");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktIndustry", b =>
                {
                    b.Property<Guid>("IndustryId")
                        .HasColumnName("Industry_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("GeographicCodes")
                        .HasColumnName("Geographic_codes")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("GlobalCode")
                        .HasColumnName("Global_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IndustryName")
                        .HasColumnName("Industry_Name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("IndustryUid")
                        .HasColumnName("industry_UID")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasColumnName("Local_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("SetCode")
                        .HasColumnName("Set_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IndustryId")
                        .HasName("pk_industry_id");

                    b.ToTable("mkt_industry");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktPermission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnName("permission_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("PermissionDescription")
                        .HasColumnName("permission_description")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("PermissionName")
                        .HasColumnName("permission_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PermissionId")
                        .HasName("pk_permission_id");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_permission");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessErrorlog", b =>
                {
                    b.Property<Guid>("RunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("run_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProcessId")
                        .HasColumnName("process_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("errorCode")
                        .HasColumnName("error_code")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("errorLog")
                        .HasColumnName("error_log")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.HasKey("RunId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_error_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessList", b =>
                {
                    b.Property<Guid?>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("process_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProcessName")
                        .HasColumnName("process_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ProcessType")
                        .HasColumnName("process_type")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("notifyFlag")
                        .HasColumnName("notify_flag")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("notifyList")
                        .HasColumnName("notify_list")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("schFlag")
                        .HasColumnName("sch_flag")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ProcessId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_list");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessRunlog", b =>
                {
                    b.Property<Guid>("RunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("run_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("end_date")
                        .HasColumnType("datetime");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProcessId")
                        .HasColumnName("process_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("datetime");

                    b.Property<string>("msgLog")
                        .HasColumnName("msg_log")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("notifyFlag")
                        .HasColumnName("notify_flag")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("notifyList")
                        .HasColumnName("notify_list")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("runStatus")
                        .HasColumnName("run_status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("userId")
                        .HasColumnName("user_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("userName")
                        .HasColumnName("user_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("RunId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_run_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRegion", b =>
                {
                    b.Property<Guid>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("GeographicCodes")
                        .HasColumnName("Geographic_codes")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("GlobalCode")
                        .HasColumnName("Global_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasColumnName("Local_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("RegionName")
                        .HasColumnName("Region_Name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("RegionUid")
                        .HasColumnName("region_UID")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("SetCode")
                        .HasColumnName("Set_Code")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RegionId")
                        .HasName("pk_region_id");

                    b.ToTable("mkt_region");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleDescription")
                        .HasColumnName("role_description")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("RoleName")
                        .HasColumnName("role_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RoleId")
                        .HasName("pk_role_id");

                    b.ToTable("mkt_role");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRoleAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("PermissionId")
                        .HasColumnName("permission_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("mkt_role_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktSavedSearch", b =>
                {
                    b.Property<Guid>("SearchId")
                        .HasColumnName("search_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Analyst")
                        .HasColumnName("analyst")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("ECountry")
                        .HasColumnName("ECountry")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ERegion")
                        .HasColumnName("ERegion")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .HasColumnName("Industry")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<string>("Region")
                        .HasColumnName("Region")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasColumnName("search_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("company")
                        .HasColumnName("company")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("contributors")
                        .HasColumnName("contributors")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dateFrom")
                        .HasColumnName("dateFrom")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("dateRange")
                        .HasColumnName("dateRange")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("dateTo")
                        .HasColumnName("dateTo")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("docId")
                        .HasColumnName("docId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("excludeCtb")
                        .HasColumnName("excludeCtb")
                        .HasColumnType("bit");

                    b.Property<bool>("initiatingCov")
                        .HasColumnName("initiatingcov")
                        .HasColumnType("bit");

                    b.Property<string>("keyword1Search")
                        .HasColumnName("keyword1Search")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("keyword1Type")
                        .HasColumnName("keyword1Type")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("keyword2Search")
                        .HasColumnName("keyword2Search")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("keyword2Type")
                        .HasColumnName("keyword2Type")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("pHintStr")
                        .HasColumnName("pHintStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reportNo")
                        .HasColumnName("reportNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("reportStyles")
                        .HasColumnName("reportStyles")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("searchJoinCondition")
                        .HasColumnName("searchJoinCondition")
                        .HasColumnType("bit");

                    b.HasKey("SearchId")
                        .HasName("PK_mkt_savedsearch");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_saved_search");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUsageLog", b =>
                {
                    b.Property<Guid>("LogId")
                        .HasColumnName("log_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrowserName")
                        .HasColumnName("browser_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("BrowserVersion")
                        .HasColumnName("browser_version")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Device")
                        .HasColumnName("device")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("IP")
                        .HasColumnName("ip")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("LogDate")
                        .HasColumnName("log_date")
                        .HasColumnType("datetime");

                    b.Property<string>("LogType")
                        .HasColumnName("log_type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Related")
                        .HasColumnName("related")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LogId");

                    b.ToTable("mkt_usage_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnName("company")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentName")
                        .HasColumnName("department_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("DepartmentNo")
                        .HasColumnName("department_no")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("DisplayName")
                        .HasColumnName("display_name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("EmailId")
                        .HasColumnName("email_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<long?>("Employeeid")
                        .HasColumnName("employeeid")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .HasColumnName("mobile_no")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedById")
                        .HasColumnName("modified_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MsdsConsitencyGuid")
                        .HasColumnName("msds_consistencyguid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreferContributorId")
                        .HasColumnName("prefer_contributor_id")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("Samaccountname")
                        .HasColumnName("samaccountname")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("UserPrincipalName")
                        .HasColumnName("userprincipalname")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("UserId")
                        .HasName("pk_user_id");

                    b.ToTable("mkt_user");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserActivity", b =>
                {
                    b.Property<Guid>("UserActivityId")
                        .HasColumnName("user_activity_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Analyst")
                        .HasColumnName("analyst")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("CreatedById")
                        .HasColumnName("created_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedById")
                        .HasColumnName("deleted_by_id")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnName("deleted_on")
                        .HasColumnType("datetime");

                    b.Property<string>("ECountry")
                        .HasColumnName("ECountry")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("ERegion")
                        .HasColumnName("ERegion")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .HasColumnName("Industry")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProjectCode")
                        .HasColumnName("project_code")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Region")
                        .HasColumnName("Region")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<DateTime>("SearchDate")
                        .HasColumnName("search_date")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnName("company")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("contributors")
                        .HasColumnName("contributors")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("dateFrom")
                        .HasColumnName("dateFrom")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("dateTo")
                        .HasColumnName("dateTo")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<long>("docId")
                        .HasColumnName("docId")
                        .HasColumnType("bigint");

                    b.Property<bool>("excludeCtb")
                        .HasColumnName("excludeCtb")
                        .HasColumnType("bit");

                    b.Property<string>("headlineSearch")
                        .HasColumnName("headlineSearch")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("initiatingCov")
                        .HasColumnName("initiatingcov")
                        .HasColumnType("bit");

                    b.Property<string>("pHintStr")
                        .HasColumnName("pHintStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reportNo")
                        .HasColumnName("reportNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("reportStyles")
                        .HasColumnName("reportStyles")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<bool>("searchJoinCondition")
                        .HasColumnName("searchJoinCondition")
                        .HasColumnType("bit");

                    b.Property<string>("textSearch")
                        .HasColumnName("textSearch")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("tocSearch")
                        .HasColumnName("tocSearch")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("UserActivityId");

                    b.ToTable("mkt_user_activity");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserGroupAccess", b =>
                {
                    b.Property<Guid?>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("mkt_user_group_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserRoleAccess", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("mkt_user_role_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktGroup", "Group")
                        .WithMany("MktGroupAccess")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_acc_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRoleAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktPermission", "Permission")
                        .WithMany("MktRoleAccess")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("fk_acc_permission_id");

                    b.HasOne("ResearchTHM.Core.Models.MktRole", "Role")
                        .WithMany("MktRoleAccess")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_acc_role_id");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserGroupAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktGroup", "Group")
                        .WithMany("MktUserGroupAccess")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_ug_acc_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchTHM.Core.Models.MktUser", "User")
                        .WithMany("MktUserGroupAccess")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_ug_acc_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserRoleAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktRole", "Role")
                        .WithMany("MktUserRoleAccess")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_ur_acc_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchTHM.Core.Models.MktUser", "User")
                        .WithMany("MktUserRoleAccess")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_ur_acc_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
