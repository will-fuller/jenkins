// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchTHM.Core.Models;

namespace ResearchTHM.Core.Migrations
{
    [DbContext(typeof(ResearchMktContext))]
    [Migration("20210713073630_addDownloadSource")]
    partial class addDownloadSource
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResearchTHM.Core.Models.BoxFolderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxFolderId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("box_folder_id");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("folder_name");

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("parent_name");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("parent_id");

                    b.HasKey("Id");

                    b.HasIndex("BoxFolderId");

                    b.HasIndex("FolderName");

                    b.HasIndex("Parent");

                    b.ToTable("BoxFolderInfo");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktApiConfig", b =>
                {
                    b.Property<Guid>("AppConfigId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("app_config_id");

                    b.Property<string>("ApiName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("api_name");

                    b.Property<string>("AppId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("app_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("description");

                    b.Property<string>("EndPoint")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("end_point");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("user_id");

                    b.HasKey("AppConfigId");

                    b.ToTable("mkt_api_config");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktAuditLog", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("audit_id");

                    b.Property<string>("DeletedIds")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("deleted_ids");

                    b.Property<string>("ExcludedIds")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("excluded_ids");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncludedIds")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("included_ids");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_id");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("process_name");

                    b.Property<Guid?>("RunId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("run_id");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_on");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("user_name");

                    b.HasKey("AuditId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_audit_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktBoxdocInfo", b =>
                {
                    b.Property<long>("DocId")
                        .HasColumnType("bigint")
                        .HasColumnName("doc_id");

                    b.Property<long>("Boxid")
                        .HasColumnType("bigint")
                        .HasColumnName("box_id");

                    b.Property<DateTime?>("ContentCreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("content_created_on");

                    b.Property<DateTime?>("ContentModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("content_modified_on");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_name");

                    b.Property<string>("CreatedByType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by_type");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("DocType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("doc_type");

                    b.Property<string>("Etag")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("etag");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("file_name");

                    b.Property<int?>("FileSize")
                        .HasColumnType("int")
                        .HasColumnName("file_size");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ItemStatus")
                        .HasColumnType("bit")
                        .HasColumnName("item_status");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_id");

                    b.Property<string>("ModifiedByName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_name");

                    b.Property<string>("ModifiedByType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("modified_by_type");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("OwnedById")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("owned_by_id");

                    b.Property<string>("OwnedByName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("owned_by_name");

                    b.Property<string>("OwnedByType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("owned_by_type");

                    b.Property<string>("ParentEtag")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("parent_etag");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.Property<string>("ParentName")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("parent_name");

                    b.Property<string>("ParentSequenceId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("parent_sequence_id");

                    b.Property<string>("ParentType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("parent_type");

                    b.Property<int>("SequenceId")
                        .HasColumnType("int")
                        .HasColumnName("sequence_id");

                    b.HasKey("DocId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_box_doc_info");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktCompanyMaster", b =>
                {
                    b.Property<string>("AlternateLegalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEntity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GicsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GicsIndustryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPODate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsertDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPublic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuerCikNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LEI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MXID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentCompanyPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentOrganisationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryIssueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRICExchangeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRICExchangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRICISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRICPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryRICTickerSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateParentCompanyPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateParentIssuerEquityPrimaryRIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateParentOrganisationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateParentOrganisationOrgid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateParentOrganizationID")
                        .HasColumnType("nvarchar(max)");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktContributor", b =>
                {
                    b.Property<Guid>("ContributorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("contributor_id");

                    b.Property<string>("Author")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("author");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("author_id");

                    b.Property<string>("Category")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("category");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("category_id");

                    b.Property<string>("CompanyCategory")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("company_category");

                    b.Property<string>("ContributorAlias")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("contributor_alias");

                    b.Property<string>("ContributorName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("contributor_name");

                    b.Property<string>("ContributorUid")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("contributor_uid");

                    b.Property<string>("Country")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("country");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("country_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Currency")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("currency");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("currency_id");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<bool?>("Embargo")
                        .HasColumnType("bit")
                        .HasColumnName("embargo");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("industry");

                    b.Property<Guid?>("IndustryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("industry_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsExcluded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_excluded")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("profile_id");

                    b.Property<string>("ProfileName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("profile_name");

                    b.Property<string>("Region")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("region");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("region_id");

                    b.Property<string>("Setcode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("setcode");

                    b.Property<string>("Setcodetype")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("setcodetype");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("subject");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("subject_id");

                    b.HasKey("ContributorId")
                        .HasName("pk_contributor_id");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_contributor");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktCountry", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("country_id");

                    b.Property<string>("CountryName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("country_Name");

                    b.Property<string>("CountryUid")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("country_UID");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("GeographicCodes")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Geographic_codes");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Global_Code");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Local_Code");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("SetCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Set_Code");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("CountryId")
                        .HasName("pk_coutry_id");

                    b.ToTable("mkt_country");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktDownloadHist", b =>
                {
                    b.Property<Guid>("DownloadHistId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("download_hist_id");

                    b.Property<string>("Analyst")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("analyst");

                    b.Property<long?>("BoxFileId")
                        .HasColumnType("bigint")
                        .HasColumnName("boxfile_id");

                    b.Property<string>("ContributorName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("contributor_name");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<long>("DocId")
                        .HasColumnType("bigint")
                        .HasColumnName("doc_id");

                    b.Property<string>("DocName")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("doc_name");

                    b.Property<DateTime?>("DocReleaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("doc_release_date");

                    b.Property<string>("DocTitle")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("doc_title");

                    b.Property<string>("DownloadType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("download_type");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("file_name");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<string>("FileType")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("file_type");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PageNo")
                        .HasColumnType("int")
                        .HasColumnName("page_no");

                    b.Property<string>("Pages")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pages");

                    b.Property<string>("Price")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("price");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("project_code");

                    b.Property<string>("RequestId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("request_id");

                    b.Property<string>("RequestSource")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("requestSource");

                    b.Property<string>("Saved")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("saved");

                    b.Property<string>("Source")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("source");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("DownloadHistId");

                    b.ToTable("mkt_download_hist");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroup", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("group_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("GroupAdName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("group_adname");

                    b.Property<string>("GroupDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("group_description");

                    b.Property<string>("GroupName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("group_name");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("isdeveloper")
                        .HasColumnType("bit");

                    b.HasKey("GroupId")
                        .HasName("pk_group_id");

                    b.ToTable("mkt_group");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContributorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("contributor_id");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("group_id");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("mkt_group_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("group_id");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("permission_id");

                    b.HasKey("Id");

                    b.ToTable("mkt_group_permission");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktIndustry", b =>
                {
                    b.Property<Guid>("IndustryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Industry_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("GeographicCodes")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Geographic_codes");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Global_Code");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IndustryName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Industry_Name");

                    b.Property<string>("IndustryUid")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("industry_UID");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Local_Code");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("SetCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Set_Code");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IndustryId")
                        .HasName("pk_industry_id");

                    b.ToTable("mkt_industry");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktLanguages", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("language_id");

                    b.Property<string>("CodePage")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Code_Page");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Language_Name");

                    b.Property<string>("LanguageUid")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Language_UID");

                    b.Property<string>("MXExistingLanguage")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("MX_Existing_Language");

                    b.Property<string>("MXLanguageMap")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("MX_Language_Map");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("RFC_1766")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("RFC_1766");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("Sort_Order");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("LanguageId")
                        .HasName("pk_language_id");

                    b.ToTable("mkt_language");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktPermission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("permission_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("PermissionDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("permission_description");

                    b.Property<string>("PermissionName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("permission_name");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PermissionId")
                        .HasName("pk_permission_id");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_permission");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessErrorlog", b =>
                {
                    b.Property<Guid>("RunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("run_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_id");

                    b.Property<string>("errorCode")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("error_code");

                    b.Property<string>("errorLog")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("error_log");

                    b.HasKey("RunId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_error_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessList", b =>
                {
                    b.Property<Guid?>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProcessName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("process_name");

                    b.Property<string>("ProcessType")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("process_type");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("notifyFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("notify_flag");

                    b.Property<string>("notifyList")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("notify_list");

                    b.Property<string>("schFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sch_flag");

                    b.HasKey("ProcessId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_list");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProcessRunlog", b =>
                {
                    b.Property<Guid>("RunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("run_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("msgLog")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("msg_log");

                    b.Property<string>("notifyFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("notify_flag");

                    b.Property<string>("notifyList")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("notify_list");

                    b.Property<string>("runStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("run_status");

                    b.Property<string>("userId")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("user_id");

                    b.Property<string>("userName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("user_name");

                    b.HasKey("RunId");

                    b.HasAlternateKey("ID");

                    b.ToTable("mkt_process_run_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktProjectCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("projectcode_name");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("MktProjectCode");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRegion", b =>
                {
                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("region_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("GeographicCodes")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Geographic_codes");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Global_Code");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LocalCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Local_Code");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("RegionName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Region_Name");

                    b.Property<string>("RegionUid")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("region_UID");

                    b.Property<string>("SetCode")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Set_Code");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RegionId")
                        .HasName("pk_region_id");

                    b.ToTable("mkt_region");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("role_description");

                    b.Property<string>("RoleName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("role_name");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RoleId")
                        .HasName("pk_role_id");

                    b.ToTable("mkt_role");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRoleAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("PermissionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("permission_id");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("mkt_role_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktSavedSearch", b =>
                {
                    b.Property<Guid>("SearchId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("search_id");

                    b.Property<string>("Analyst")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("analyst");

                    b.Property<string>("Country")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("country");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("ECountry")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ECountry");

                    b.Property<string>("ERegion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ERegion");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Industry");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("PagesFrom")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pageFrom");

                    b.Property<string>("PagesTo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pageTo");

                    b.Property<string>("Region")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Region");

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("search_name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("company")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company");

                    b.Property<string>("contributors")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contributors");

                    b.Property<string>("dateFrom")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("dateFrom");

                    b.Property<string>("dateRange")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dateRange");

                    b.Property<string>("dateTo")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("dateTo");

                    b.Property<string>("docId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("docId");

                    b.Property<bool>("excludeCtb")
                        .HasColumnType("bit")
                        .HasColumnName("excludeCtb");

                    b.Property<bool>("initiatingCov")
                        .HasColumnType("bit")
                        .HasColumnName("initiatingcov");

                    b.Property<string>("keyword1Search")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("keyword1Search");

                    b.Property<string>("keyword1Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("keyword1Type");

                    b.Property<string>("keyword2Search")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("keyword2Search");

                    b.Property<string>("keyword2Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("keyword2Type");

                    b.Property<string>("pHintStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pHintStr");

                    b.Property<string>("reportNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("reportNo");

                    b.Property<string>("reportStyles")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("reportStyles");

                    b.Property<bool>("searchJoinCondition")
                        .HasColumnType("bit")
                        .HasColumnName("searchJoinCondition");

                    b.HasKey("SearchId")
                        .HasName("PK_mkt_savedsearch");

                    b.HasAlternateKey("Id");

                    b.ToTable("mkt_saved_search");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUsageLog", b =>
                {
                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("log_id");

                    b.Property<string>("BrowserName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("browser_name");

                    b.Property<string>("BrowserVersion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("browser_version");

                    b.Property<string>("Device")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("device");

                    b.Property<string>("IP")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ip");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("location");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime")
                        .HasColumnName("log_date");

                    b.Property<string>("LogType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("log_type");

                    b.Property<string>("LoginSource")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("login_source");

                    b.Property<string>("Related")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("related");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("LogId");

                    b.ToTable("mkt_usage_log");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("Company")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("company");

                    b.Property<string>("Country")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("country");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("department_name");

                    b.Property<string>("DepartmentNo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("department_no");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("display_name");

                    b.Property<string>("EmailId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email_id");

                    b.Property<long?>("Employeeid")
                        .HasColumnType("bigint")
                        .HasColumnName("employeeid");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("first_name");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LanguagePreferences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("last_name");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("location");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("ModifiedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<Guid>("MsdsConsitencyGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("msds_consistencyguid");

                    b.Property<string>("PreferContributorId")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("prefer_contributor_id");

                    b.Property<string>("Samaccountname")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("samaccountname");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("title");

                    b.Property<string>("UserPrincipalName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userprincipalname");

                    b.HasKey("UserId")
                        .HasName("pk_user_id");

                    b.ToTable("mkt_user");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserActivity", b =>
                {
                    b.Property<Guid>("UserActivityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_activity_id");

                    b.Property<string>("Analyst")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("analyst");

                    b.Property<string>("Country")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("country");

                    b.Property<string>("CreatedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("DeletedById")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deleted_by_id");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_on");

                    b.Property<string>("ECountry")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("ECountry");

                    b.Property<string>("ERegion")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("ERegion");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Industry")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("Industry");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isdeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LanguagePreferences")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("LanguagePreferences");

                    b.Property<string>("PagesFrom")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pageFrom");

                    b.Property<string>("PagesTo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pageTo");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("project_code");

                    b.Property<string>("Region")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("Region");

                    b.Property<DateTime>("SearchDate")
                        .HasColumnType("datetime")
                        .HasColumnName("search_date");

                    b.Property<string>("Source")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("source");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("company");

                    b.Property<string>("contributors")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("contributors");

                    b.Property<string>("dateFrom")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("dateFrom");

                    b.Property<string>("dateTo")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("dateTo");

                    b.Property<long>("docId")
                        .HasColumnType("bigint")
                        .HasColumnName("docId");

                    b.Property<bool>("excludeCtb")
                        .HasColumnType("bit")
                        .HasColumnName("excludeCtb");

                    b.Property<string>("headlineSearch")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("headlineSearch");

                    b.Property<bool>("initiatingCov")
                        .HasColumnType("bit")
                        .HasColumnName("initiatingcov");

                    b.Property<string>("pHintStr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pHintStr");

                    b.Property<string>("reportNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("reportNo");

                    b.Property<string>("reportStyles")
                        .HasMaxLength(3000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3000)")
                        .HasColumnName("reportStyles");

                    b.Property<bool>("searchJoinCondition")
                        .HasColumnType("bit")
                        .HasColumnName("searchJoinCondition");

                    b.Property<string>("textSearch")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("textSearch");

                    b.Property<string>("tocSearch")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("tocSearch");

                    b.HasKey("UserActivityId");

                    b.ToTable("mkt_user_activity");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserGroupAccess", b =>
                {
                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("group_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("mkt_user_group_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserRoleAccess", b =>
                {
                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("mkt_user_role_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.VwContributorGroup", b =>
                {
                    b.Property<Guid>("ContributorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ctbid");

                    b.Property<string>("ContributorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ctb_name");

                    b.Property<string>("Groups")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("groups");

                    b.ToView("vw_contributor_group_access");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.VwContributorGroupDeveloper", b =>
                {
                    b.Property<Guid>("ContributorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ctbid");

                    b.Property<string>("ContributorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ctb_name");

                    b.Property<string>("Groups")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("groups");

                    b.ToView("vw_contributor_group_access_dvlpr");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.VwCountyRegion", b =>
                {
                    b.Property<string>("CountryGlobalCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CountryGlobalCode");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CountryName");

                    b.Property<string>("IsCountry")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IsCountry");

                    b.Property<string>("RegionGlobalCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RegionGlobalCode");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RegionName");

                    b.Property<string>("SelectedCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SelectedCode");

                    b.ToView("vw_country_region");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.VwUserInfo", b =>
                {
                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Company");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department_Name");

                    b.Property<string>("DepartmentNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department_No");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Display_Name");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email_Id");

                    b.Property<long?>("Employeeid")
                        .HasColumnType("bigint")
                        .HasColumnName("Employeeid");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("First_Name");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Group_Id");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Group_Name");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Location");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Log_Date");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mobile_No");

                    b.Property<string>("PreferContributorId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prefer_contributor_id");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("Samaccountname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Samaccountname");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User_Id");

                    b.Property<string>("userprincipalname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userprincipalname");

                    b.ToView("vw_user_info");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.VwUserInfoDeveloper", b =>
                {
                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Company");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department_Name");

                    b.Property<string>("DepartmentNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department_No");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Display_Name");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email_Id");

                    b.Property<long?>("Employeeid")
                        .HasColumnType("bigint")
                        .HasColumnName("Employeeid");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("First_Name");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Group_Id");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Group_Name");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Location");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Log_Date");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mobile_No");

                    b.Property<string>("PreferContributorId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prefer_contributor_id");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("Samaccountname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Samaccountname");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User_Id");

                    b.Property<string>("userprincipalname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userprincipalname");

                    b.ToView("vw_user_info_dvlpr");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroupAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktGroup", "Group")
                        .WithMany("MktGroupAccess")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_acc_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRoleAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktPermission", "Permission")
                        .WithMany("MktRoleAccess")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("fk_acc_permission_id");

                    b.HasOne("ResearchTHM.Core.Models.MktRole", "Role")
                        .WithMany("MktRoleAccess")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_acc_role_id");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserGroupAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktGroup", "Group")
                        .WithMany("MktUserGroupAccess")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_ug_acc_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchTHM.Core.Models.MktUser", "User")
                        .WithMany("MktUserGroupAccess")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_ug_acc_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUserRoleAccess", b =>
                {
                    b.HasOne("ResearchTHM.Core.Models.MktRole", "Role")
                        .WithMany("MktUserRoleAccess")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_ur_acc_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchTHM.Core.Models.MktUser", "User")
                        .WithMany("MktUserRoleAccess")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_ur_acc_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktGroup", b =>
                {
                    b.Navigation("MktGroupAccess");

                    b.Navigation("MktUserGroupAccess");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktPermission", b =>
                {
                    b.Navigation("MktRoleAccess");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktRole", b =>
                {
                    b.Navigation("MktRoleAccess");

                    b.Navigation("MktUserRoleAccess");
                });

            modelBuilder.Entity("ResearchTHM.Core.Models.MktUser", b =>
                {
                    b.Navigation("MktUserGroupAccess");

                    b.Navigation("MktUserRoleAccess");
                });
#pragma warning restore 612, 618
        }
    }
}
